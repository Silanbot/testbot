import credentials as credentials
import telebot
import config
import random

from telebot import types


bot = telebot.TeleBot(config.token)

markup = types.ReplyKeyboardMarkup(resize_keyboard = True)


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('C:/Users/–í–∏–∫—Ç–æ—Ä/Desktop/MyFiles/stickers/zelenskiy.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–¢–≤–æ–π –±–∞–ª–ª –Ω–∞ –ó–ù–û –ø–æ —É–∫—Ä.–º–æ–≤–µ üòè')
    item2 = types.KeyboardButton('–ö–∞–∫ –¥–µ–ª–∞, –ù–∏–∫–∏—Ç–∞-–±–æ—Ç? üòÇ')
    item3 = types.KeyboardButton('Instagram —Å–æ–∑–¥–∞—Ç–µ–ª—è ‚ö°')
    item4 = types.KeyboardButton('–ü–æ–∫–∞ ‚úã')
    item5 = types.KeyboardButton('–í —Å–º—ã—Å–ª–µ?')
    markup.add(item1,item2, item3, item4, item5)

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–∞–¥–∏ —Ö–∞–π–ø–∞ (by Nikita Silakov)'.format(message.from_user, bot.get_me()),
                     parse_mode = 'html', reply_markup=markup)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —Ö–æ—Ö–ª—ã—à, –¥–∞–π —Å–∞–ª–æ –Ω–∞ —Ö–ª–µ–±—á–∏–∫ üçû'.format(message.from_user, bot.get_me()),
                     parse_mode = 'html')
    bot.send_message(message.chat.id, '–õ–∞–¥–Ω–æ, –∂–∞–¥—é–≥–∞, –Ω–µ –Ω–∞–¥–æ üò¢. –í—ã–±–µ—Ä–∏ –ª—É—á—à–µ —á—Ç–æ-—Ç–æ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ ‚¨á'.format(message.from_user, bot.get_me()),
                     parse_mode='html')


@bot.message_handler(content_types = ['text'])
def keyboard(message):
    if message.chat.type == 'private':
        if message.text == '–¢–≤–æ–π –±–∞–ª–ª –Ω–∞ –ó–ù–û –ø–æ —É–∫—Ä.–º–æ–≤–µ üòè':
            bot.send_message(message.chat.id, str(random.randint(100,200)))
        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞, –ù–∏–∫–∏—Ç–∞-–±–æ—Ç? üòÇ':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        elif message.text == 'Instagram —Å–æ–∑–¥–∞—Ç–µ–ª—è ‚ö°':
            bot.send_message(message.chat.id, '@silakov_228')
        elif message.text == '–ü–æ–∫–∞ ‚úã':
            bot.send_message(message.chat.id, '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á, –º–æ–π –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥! –ò –ø–æ–º–Ω–∏, —è –°–∏–ª–∞–Ω üòè')
        elif message.text == '–í —Å–º—ã—Å–ª–µ?':
            bot.send_message(message.chat.id, '–í –°–ú–´–°–õ–ï?')
        else:
            bot.send_message(message.chat.id, '–Ø —Ç–æ–ª—å–∫–æ —É—á—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫, –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ üò¢')

    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        try:
            if call.message:
                if call.data == 'good':
                    bot.send_message(call.message.chat.id, '–≠—Ç–æ —Ö–æ—Ä–æ—à–æ üòä')
                elif call.data == 'bad':
                    bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç, —Å—ä–µ—à—å —Å–∞–ª—å—Ü–∞ üò¢')

                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                                      reply_markup=None)

        except Exception as e:
            print(repr(e))




bot.polling(none_stop = True)
